## SQL Practice Using the sakila database ( comes with mysql installation)

* 1a. You need a list of all the actors who have Display the first and last names of all actors from the table `actor`.
Solution: SELECT DISTINCT first_name, last_name
FROM sakila.actor;

* 1b. Display the first and last name of each actor in a single column in upper case letters. Name the column `Actor Name`. 
Solution: SELECT *, CONCAT(first_name, ' ', last_name) AS Actor_Name FROM sakila.actor;

* 2a. You need to find the ID number, first name, and last name of an actor, of whom you know only the first name, "Joe." What is one query would you use to obtain this information? 
Solution: SELECT actor_id, first_name, last_name FROM sakila.actor WHERE first_name LIKE "Joe";
  	
* 2b. Find all actors whose last name contain the letters `GEN`:
Solution: SELECT * FROM sakila.actor WHERE last_name LIKE "%GEN%"

* 2c. Find all actors whose last names contain the letters `LI`. This time, order the rows by last name and first name, in that order: 
Solution: SELECT last_name, first_name FROM sakila.actor WHERE last_name LIKE "%LI%";

* 2d. Using `IN`, display the `country_id` and `country` columns of the following countries: Afghanistan, Bangladesh, and China:
Solution: SELECT country_id, country FROM sakila.country
WHERE country IN ('Afghanistan', 'Bangladesh', 'China');

* 3a. Add a `middle_name` column to the table `actor`. Position it between `first_name` and `last_name`. Hint: you will need to specify the data type.
Solution: ALTER table sakila.actor Add column middle_name CHAR(20) AFTER first_name;
  	
* 3b. You realize that some of these actors have tremendously long last names. Change the data type of the `middle_name` column to `blobs`. 
Solution: ALTER TABLE sakila.actor MODIFY COLUMN middle_name blob # there is nothing as blobs.

* 3c. Now delete the `middle_name` column.
Solution: ALTER table actor DROP middle_name;

* 4a. List the last names of actors, as well as how many actors have that last name.
Solution: SELECT last_name, COUNT(last_name)  FROM sakila.actor GROUP BY last_name;
  	
* 4b. List last names of actors and the number of actors who have that last name, but only for names that are shared by at least two actors
Solution: SELECT last_name, COUNT(last_name)  FROM sakila.actor GROUP BY last_name HAVING COUNT(last_name) > 1;


* 4c. Oh, no! The actor `HARPO WILLIAMS` was accidentally entered in the `actor` table as `GROUCHO WILLIAMS`, the name of Harpo's second cousin's husband's yoga teacher. Write a query to fix the record.

Solution: Update sakila.actor SET first_name = 'HARPO' WHERE last_name LIKE "WILLIAMS" AND first_name like "GROUCHO";